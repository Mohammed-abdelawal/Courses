# Generated by Django 2.2.5 on 2019-11-22 21:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import website.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category name')),
                ('slug', models.SlugField(unique=True, verbose_name='slug in url')),
                ('desc', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True, verbose_name='slug in url')),
                ('name', models.CharField(max_length=150, verbose_name='The Name')),
                ('time', models.IntegerField(verbose_name='Full course time in Hours')),
                ('pub_date', models.DateField(blank=True, default=None, null=True, verbose_name='Publish Date')),
                ('expiration_date', models.DateField(blank=True, null=True, verbose_name='Expiration Date')),
                ('files', models.FileField(blank=True, null=True, upload_to='CF', verbose_name='Attached Files in Zip and named as course title')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is Approved By Admin ?')),
                ('intro_text', models.TextField(verbose_name='Course Text introduction')),
                ('intro_video', models.URLField(help_text='This should be embed YouTube', verbose_name='introduction video')),
                ('before', models.TextField(help_text='What student should know about before enroll in course', verbose_name='Before the course')),
                ('after', models.TextField(help_text='What student can do after', verbose_name='After the course')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='website.Category', verbose_name='Category')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='The Instructor')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('website', models.URLField(verbose_name='Website')),
                ('after', models.TextField(verbose_name='After Link')),
                ('before', models.TextField(verbose_name='After Link')),
            ],
            options={
                'verbose_name': 'Host',
                'verbose_name_plural': 'Hosts',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='CAPITAL chars', max_length=50, verbose_name='Language')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Level name', max_length=50, verbose_name='Level')),
            ],
            options={
                'verbose_name': 'Level',
                'verbose_name_plural': 'Levels',
            },
        ),
        migrations.CreateModel(
            name='NewsTeller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('is_subscribe', models.BooleanField(default=True, verbose_name='is Subscribe')),
            ],
        ),
        migrations.CreateModel(
            name='NewsTeller_Emails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msg', models.TextField(verbose_name='MSG')),
                ('subject', models.CharField(max_length=100, verbose_name='Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Skill name')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Tag Name')),
                ('desc', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='The name')),
                ('desc', models.TextField(verbose_name='Description')),
                ('arrange', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1, "Arrange start at '1'")], verbose_name='Unit Arrange')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_unit', to='website.Course', verbose_name='Course')),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
                'unique_together': {('arrange', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Student_Study_Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Course', verbose_name='Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_study', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Enrollment',
                'verbose_name_plural': 'Enrollments',
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200, verbose_name='Question')),
                ('style', models.IntegerField(choices=[(0, 'Choose'), (1, 'Complete'), (2, 'Check Done')], default=1, verbose_name='style')),
                ('answer', models.CharField(max_length=200, verbose_name='True answer')),
                ('ch1', models.CharField(blank=True, max_length=200, null=True, verbose_name='False 1')),
                ('ch2', models.CharField(blank=True, max_length=200, null=True, verbose_name='False 2')),
                ('ch3', models.CharField(blank=True, max_length=200, null=True, verbose_name='False 3')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_quiz', to='website.Unit', verbose_name='Unit')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('is_male', models.BooleanField(choices=[(False, 'Male'), (True, 'Female')], verbose_name='Gender')),
                ('birthdate', models.DateField(blank=True, null=True, validators=[website.models.birth_validator], verbose_name='Birth date')),
                ('country', models.CharField(max_length=30, verbose_name='Country')),
                ('city', models.CharField(max_length=30, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=30, null=True, verbose_name='state')),
                ('pic', models.ImageField(blank=True, null=True, upload_to='PP', verbose_name='Personal Pic')),
                ('saved', models.ManyToManyField(blank=True, related_name='like', to='website.Course', verbose_name='Saved courses')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='The User')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
                ('text', models.TextField(verbose_name='Lesson Text')),
                ('video', models.URLField(help_text='embeded video link', verbose_name='Video Link')),
                ('arrange', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, "Arrange start at '1'")], verbose_name='Arrange in Unit')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='website.Host', verbose_name='Host')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_lesson', to='website.Unit', verbose_name='Unit')),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
                'unique_together': {('arrange', 'unit')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='language',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='website.Language', verbose_name='Language'),
        ),
        migrations.AddField(
            model_name='course',
            name='level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='website.Level', verbose_name='Level'),
        ),
        migrations.AddField(
            model_name='course',
            name='skills_covered',
            field=models.ManyToManyField(related_name='skill', to='website.Skill', verbose_name='Skiils Covered in Course'),
        ),
        migrations.AddField(
            model_name='course',
            name='tags',
            field=models.ManyToManyField(related_name='Ctags', to='website.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='Student_Finish_Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Rating')),
                ('feedback', models.TextField(verbose_name='Course FeedBack')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_finish', to='website.Course', verbose_name='Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Finished Enrolls',
                'verbose_name_plural': 'Finished Enrolls',
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Quiz_Solve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_True', models.BooleanField(verbose_name='is True?')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enroll_quiz', to='website.Student_Study_Course', verbose_name='enrollment')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Quiz', verbose_name='quiz')),
            ],
            options={
                'verbose_name': 'Quiz_Solve',
                'verbose_name_plural': 'Quizs_Solves',
                'unique_together': {('quiz', 'enrollment')},
            },
        ),
        migrations.CreateModel(
            name='Lesson_Attend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enroll_lesson', to='website.Student_Study_Course', verbose_name='enrollment')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_attend', to='website.Lesson', verbose_name='lesson')),
            ],
            options={
                'verbose_name': 'Attended Lesson',
                'verbose_name_plural': 'Attended Lessons',
                'unique_together': {('lesson', 'enrollment')},
            },
        ),
    ]
